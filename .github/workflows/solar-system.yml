name: unit testing for the solarsystem project

on:  
  push:

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
 
jobs:  
  build:
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest, windows-latest]
        exclude:
          - node-version: 18
            os: windows-latest
        include:
          - node-version: 18
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4.2.2
       
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
 
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package-lock.json') }}
 
      - name: Install dependencies
        run: npm install
       
      - name: Run Unit Tests
        run: npm test
 
  code-coverage:
    container:
      image: node:18
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
 
      - name: Install dependencies
        run: npm install

      - name: Run Code Coverage
        continue-on-error: true
        run: npm run coverage
 
      - name: Archive the Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test-Results
          path: Test-Results.xml
 
  docker:
    name: containerization
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
 
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DH_USERNAME }}
          password: ${{ secrets.DH_PASSWORD }}
 
      - name: Login to GH Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: Samarth-DevTools
          password: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ vars.DH_USERNAME }}/solar-system:${{ github.sha }}
 
      - name: Test Docker Image
        run: |
          docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=${{ env.MONGO_URI }} \
            -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
            ${{ vars.DH_USERNAME }}/solar-system:${{ github.sha }}
          
          echo "Waiting for container to start..."
          sleep 5

          echo "Testing Image using curl"
          curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/live | grep 200
     
      - name: Push images to registries
        if: always()
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DH_USERNAME }}/solar-system:${{ github.sha }}
            ghcr.io/Samarth-DevTools/solar-system:${{ github.sha }}
 
# Optional dev-deploy step (uncomment when ready)
# dev-deploy:
#   needs: [build, code-coverage]
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout the repository
#       uses: actions/checkout@v4.2.2
#    
#     - name: Install kubectl
#       uses: azure/setup-kubectl@v3
#       with:
#         version: 'v1.26.0'
