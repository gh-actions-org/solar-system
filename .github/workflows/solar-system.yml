name: Solar System Workflow

on: 
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #     - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    unit-testing:
      name: Unit Testing
      # services:
      #   mongo-db:
      #     image: siddharth67/mongo-db:non-prod
      #     ports:
      #       - 27017:27017
      # env:
      #   MONGO_URI: 'mongodb://localhost:27017/superData'
      #   MONGO_USERNAME: non-prod-user
      #   MONGO_PASSWORD: non-prod-password

      strategy:
          matrix:
            nodejs-version: [18,19]
            os: [ubuntu-latest, windows-latest]
            exclude:
              - nodejs-version: 19
                os: windows-latest
              - nodejs-version: 18
                os: windows-latest

      runs-on: ${{ matrix.os }}
      
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs-version }}
    
      - name: Caching dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install
    
      - name: Unit Testing
        id: unit-testing-step
        run: npm test

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test-Results-${{ matrix.os }}-node${{ matrix.nodejs-version }}
          path: test-results.xml
          

    code-coverage:
      name: CodeCoverage
      # container:
      #   image: node:18
      # services:
      #   mongo-db:
      #     image: siddharth67/mongo-db:non-prod
      #     options: 
      #       --name mongo
      # env:
      #   MONGO_URI: 'mongodb://mongo:27017/superData'
      #   MONGO_USERNAME: non-prod-user
      #   MONGO_PASSWORD: non-prod-password 

      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # - name: Setup NodeJS Version
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      - name: Caching dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      
      - name: Install Dependencies
        run: npm install
  
      - name: Test code coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-rslt
          path: coverage
          retention-days: 3
    
          
    docker:
      name: containerization
      needs: [unit-testing ,code-coverage]
    
      permissions:
        packages: write
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DH_USERNAME }}
            password: ${{ secrets.DH_PASSWORD }}

        - name: authenticate to GH Container Registry
      
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Building docker image
          uses: docker/build-push-action@v6
          with:
            context: .
            push: false
            tags: ${{ vars.DH_USERNAME }}/solar-system:${{ github.sha }}

        - name: Testing Docker Image
          run: |
            docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=${{ env.MONGO_URI }} \
            -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
            ${{ vars.DH_USERNAME }}/solar-system:${{ github.sha }}

            sleep 5

            wget -qO- http://localhost:3000/live | grep live


        
        - name: pushing to Docker & GHCR 
          if: always()
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: | 
              ${{ vars.DH_USERNAME }}/solar-system:${{ github.sha }}
              ghcr.io/${{ github.repository_owner }}/solar-system/${{ github.sha }}

    dev-deploy:
      needs: [docker]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - uses: azure/setup-kubectl@v4
          with:
            version: 'v1.26.0'
          id: install

        # - name: Fetch Kubernetes Cluster
        #   run: |
        #     kubectl version --short
        #     echo *******
        #     kubectl get nodes

